import java.nio.file.Paths

plugins {
    id 'java'
}

group = 'scoliosis'
version = '1.0'

repositories {
    mavenCentral()
    createFile()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'commons-io:commons-io:+'
    implementation 'org.jprocesses:jProcesses:1.6.4'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
}

jar {

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes "Main-Class": "scoliosis.Main"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

static void createFile() {
    if (new File("src/main/resources/files.txt").exists()) new File("src/main/resources/files.txt").delete();
    String files = ""
    for (File file : Paths.get("src/main/resources/").toFile().listFiles()) {
        String fileName = file.getAbsolutePath().split("resources\\\\")[1]
        if (file.isDirectory()) files += getDirectory(fileName)
        else {
            files += "," + fileName
        }
    }
    BufferedWriter writer = new BufferedWriter(new FileWriter("src/main/resources/files.txt"))

    System.out.println(files)
    writer.write(files);
    writer.close();
}

static String getDirectory(String dir) {
    String newString = ""
    for (File file : Paths.get("src/main/resources/" + dir).toFile().listFiles()) {
        String fileName = file.getAbsolutePath().split("resources\\\\")[1]
        if (file.isDirectory()) newString += getDirectory(fileName)
        newString += "," + fileName
    }

    return newString
}

test {
    useJUnitPlatform()
}